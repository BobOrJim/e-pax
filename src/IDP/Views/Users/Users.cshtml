@model IDP.ViewModels.UsersViewModel

@{
    ViewData["Title"] = "Users";
}

<h1>Users management page</h1>
<h2>@Model.Message</h2>


<form asp-controller="Users" asp-action="SearchFilter" method="post">
    <input type="hidden" asp-for="jsonSerializeStringPlaceholder1" value="@Html.Raw(Json.Serialize(Model.ListOfUsers))" />
    <input asp-for="SearchPhrase" />
    <button type="submit">Search</button>
</form>

<br>
<br>

<!-- The form that remove buttons will use -->
<form id="remove" asp-controller="Users" asp-action="RemoveRole" method="post">
    <input type="hidden" asp-for="jsonSerializeStringPlaceholder1" value="@Html.Raw(Json.Serialize(Model.ListOfUsers))" />
</form>

<table class="table table-bordered">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">
                <form asp-controller="Users" asp-action="Sort" method="post">
                    <input type="hidden" asp-for="jsonSerializeStringPlaceholder1" value="@Html.Raw(Json.Serialize(Model.ListOfUsers))" />
                    <input type="hidden" asp-for="SortAlphabetically" value="@Model.SortAlphabetically" checked />
                    <button type="submit">Role name</button>
                </form>
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.ListOfUsers.Count; i++)
        {
            <tr>
                <th scope="row">@i</th>
                <td>@Model.ListOfUsers[i].Name</td>
                <td>
                    <span class="table-remove">
                        <button type="submit"
                                name="Id"
                                value="@Model.ListOfUsers[i].Id"
                                form="remove"
                                @*asp-page-handler="Remove"*@
                                class="form-control btn btn-danger mb-2">
                            Remove
                        </button>
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>

<br>
<br>

<form asp-controller="Roles" asp-action="AddRole" method="post">
    <input type="hidden" asp-for="jsonSerializeStringPlaceholder1" value="@Html.Raw(Json.Serialize(Model.ListOfUsers))" />
    <div>
        <label>Create role:</label>
        <input asp-for="NewUserName" />
        <span asp-validation-for="NewUserName"></span>
        <button type="submit">Add role</button>
    </div>
</form>

<br>
<br>


